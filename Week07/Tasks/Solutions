#include <iostream>
using namespace std;

const int ARR_SIZE = 100;

void addElem(int arr[], int size) {
    for (int i = 0; i < size; ++i) {
        cout << "arr[" << i << "] = ";
        cin >> arr[i];
    }
}

void addElem(char arr[], int size) {
    for (int i = 0; i < size; ++i) {
        cout << "arr[" << i << "] = ";
        cin >> arr[i];
    }
}

void printArr(int arr[], int size) {
    for (int i = 0; i < size; ++i) {
        cout << arr[i] << endl;
    }
}

void printArr(char arr[], int size) {
    for (int i = 0; i < size; ++i) {
        cout << arr[i] << endl;
    }
}

//task_1
bool isPrime(int number) {
    for (int i = 2; i * i <= number; ++i) { // i < number / 2
        if (number % i == 0) {
            return false;
        }
    }

    return true;
}

void hasPrimeElem(int arr[], int size) {
    for (int i = 0; i < size; ++i) {
        if (isPrime(arr[i])) {
            cout << arr[i] << endl;
        }
    }
}

//task_2
void haveEvenNumber(int arr[], int size) {
    bool haveEven = false;
    for (int i = 0; i < size; ++i) {
        if (arr[i] % 2 == 0) {
            cout << arr[i] << endl;
            haveEven = true;
        }
    }

    if (!haveEven) {
        cout << "no even numbers" << endl;
    }
}

//task_3
void minMaxReverse(int arr[], int size) {
    //5 8 2 4 1 - 5 1 2 4 8
    int max = arr[0], min = arr[0], maxIndex = 0, minIndex = 0;
    for (int i = 1; i < size; ++i) {
        if (arr[i] > max) {
            max = arr[i];
            maxIndex = i;
        }
        if (arr[i] < min) {
            min = arr[i];
            minIndex = i;
        }
    }

    arr[maxIndex] = min; // arr[minIndex]
    arr[minIndex] = max;
}

//task_4
bool isPalindromArr(char arr[], int size) {
    //- * + * -    size -> 5
    //0 1 2 3 4

    for (int i = 0; i < size / 2; ++i) {
        if (arr[i] != arr[size - 1 - i]) {
            return false;
        }
    }

    return true;
}

//task_5
bool isVowel(char element) {
    if (element == 'a' || element == 'e' || element == 'u' || element == 'o' 
        || element == 'i' || element == 'A' || element == 'E' || element == 'U' 
        || element == 'O' || element == 'I') {
        return true;
    }

    return false;
}

void removeElements(char arr[], int size) {
    for (int i = 0; i < size; ++i) {
        if (isVowel(arr[i])) {
            for (int j = i; j < size - 1; ++j) {
                arr[j] = arr[j + 1];
            }
            --size;
            --i;
        }
    }

    for (int i = 0; i < size; ++i) {
        cout << arr[i] << " ";
    }

    cout << endl;
}

//task_6
int sumOfDigitsInArr(int number) {
    int sum = 0;
    while (number != 0) {
        sum += number % 10;
        number /= 10;
    }

    return sum;
}

int numbersInArr(int arr[], int size) {
    int count = 0;
    int sumOfDigitsInNumber = 0;
    for (int i = 0; i < size; ++i) {
        sumOfDigitsInNumber = sumOfDigitsInArr(arr[i]);
        if (sumOfDigitsInNumber > 9 && sumOfDigitsInNumber < 100) {
            ++count;
        }
    }

    return count;
}

int main()
{
    //task_1
    /*int arr[ARR_SIZE];
    int size;

    do {
        cout << "Input size: ";
        cin >> size;
    } while (size < 2 || size > 25);

    addElem(arr, size);
    hasPrimeElem(arr, size);*/

    //task_2
    /*int arr[ARR_SIZE];
    int size;

    do {
        cout << "Input size: ";
        cin >> size;
    } while (size < 2 || size > 25);

    addElem(arr, size);
    haveEvenNumber(arr, size);*/

    //task_3
    /*int arr[ARR_SIZE];
    int size;

    do {
        cout << "Input size: ";
        cin >> size;
    } while (size < 2 || size > 30);

    addElem(arr, size);
    minMaxReverse(arr, size);
    printArr(arr, size);*/

    //task_4
    /*int size;
    char palindromArr[ARR_SIZE];

    do {
        cout << "Input size: ";
        cin >> size;
    } while (size < 1 || size > 100);

    addElem(palindromArr, size);

    //cout << isPalindromArr(palindromArr, size);

    //task_5
    removeElements(palindromArr, size);*/

    //task_6
    /*int size;
    int arr[ARR_SIZE];

    do {
        cout << "Input size: ";
        cin >> size;
    } while (size < 2 || size > 30);

    addElem(arr, size);

    int count = numbersInArr(arr, size);
    if (count != 0) {
        cout << count << endl;
    }
    else {
        cout << "Count is 0" << endl;
    }*/
    
    return 0;
  }
