#include <iostream>

using namespace std;

const int SIZE = 10;

void printArray(int* arr, unsigned size) {
    for (int i = 0; i < size; ++i) {
        cout << arr[i] << " ";
    }
}

//task_1
int* printArr(int* arr, unsigned size) {
    for (int i = 0; i < size; ++i) {
        cout << arr[i] << " ";
    }

    return arr;
}

//task_2
void printMatrix(int matrix[][3], int rowSize, int colSize) {
    for (int i = 0; i < rowSize; ++i) {
        for (int j = 0; j < colSize; ++j) {
            cout << matrix[i][j] << " ";
        }
        cout << endl;
    }
}

//task_3
void changeByPointers(int* a, int* b) {
    *a += 4;
    *b += 4;
}

//task_4
void changeByRef(int& a, int& b) {
    a += 4;
    b += 4;
}

//task_5
void findMax(int arr[], unsigned size, int& max) {
    max = arr[0];
    for (int i = 1; i < size; ++i) {
        if (arr[i] > max) {
            max = arr[i];
        }
    }
}

//task_6
void replace(int arr[], unsigned size, int replaceWhat, int replaceWith) {
    for (int i = 0; i < size; ++i) {
        if (arr[i] == replaceWhat) {
            arr[i] = replaceWith;
        }
    }
}

//task_7
void minMatrix(int matrix[][4], unsigned rowSize, int& min) {
    min = matrix[0][0];
    for (int i = 0; i < rowSize; ++i) {
        for (int j = 0; j < 4; ++j) {
            if (matrix[i][j] < min) {
                min = matrix[i][j];
            }
        }
    }
}

//task_8
void reverse(int arr[], unsigned size) {
    // 1 2 3 4 5

    int temp = 0;

    for (int i = 0; i < size / 2; ++i) {
        temp = arr[i];
        arr[i] = arr[size - 1 - i];
        arr[size - 1 - i] = temp;
    }
}

int main()
{
    int number = 3; //-> [081234] -> 3
    int* pNumber;
    pNumber = &number; // -> [672435]: 081234
    *pNumber += 3;

    int& rNumber = number;

    rNumber += 3;

    //task_1
    /*
    int arr[10] = { 1, 2, 3 };

    int* secondArr = printArr(arr, 3);

    cout << endl;

    for (int i = 0; i < 13; ++i) {
        cout << secondArr[i] << " ";
    }
    */

    //task_2
    //int matrix[2][3] = { 1, 2, 3, 4, 5, 6 };
    //printMatrix(matrix, 2, 3);

    //task_3
    //int a = 1, b = 2;
    //changeByPointers(&a, &b);

    //task_4
    //changeByRef(a, b);
    //cout << a << " " << b << endl;

    //task_5
    /*
    int arr[SIZE] = { 5, 7, 9, 1, 2, 4 };
    int max = 0;

    findMax(arr, 6, max);

    cout << max << endl;
    */

    //task_6
    /*
    int arr[SIZE] = { 1, 3, 4, 1, 1, 5 };

    replace(arr, 6, 1, 6);

    printArray(arr, 6);
    */

    //task_7
    /*
    int matrix[2][4] = { 4, 7, 9, 1, 4, 5, 7, 8 };
    int min = 0;

    minMatrix(matrix, 2, min);

    cout << min << endl;
    */

    //task_8
    /*
    int arr[SIZE] = { 1, 2, 3, 4 };

    reverse(arr, 4);

    printArray(arr, 4);
    */

    return 0;
}
